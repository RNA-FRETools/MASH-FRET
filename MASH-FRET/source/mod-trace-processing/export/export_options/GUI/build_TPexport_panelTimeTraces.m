function h = build_TPexport_panelTimeTraces(h,q)

% defaults
str0 = 'Export time traces';
str1 = 'Export format:';
str2 = {'customed format(*.txt)', 'HaMMy-compatible(*.dat)', ...
    'vbFRET-compatible(*.mat)', 'SMART-compatible(*.traces)', ...
    'QUB-compatible(*.txt)', 'ebFRET-compatible(*.dat)', 'All formats'};
str3 = {'(individual files)', ...
    '(individual files) Donor and acceptor traces only.', ...
    '(one file) Donor and acceptor traces only.', ...
    '(one file) Donor and acceptor traces only.', ...
    '(individual files) Donor and acceptor traces only.', ...
    '(one file) Donor and acceptor traces only.', ...
    'Options set for customed format only.'};
str4 = 'Traces to export:';
str5 = 'intensity-time traces';
str6 = 'FRET-time traces';
str7 = 'stoichiometry-time traces';
str8 = 'all traces in one file';
str9 = 'correction factors (*.gam,*.bet)';
str10 = 'Parameters:';
str11 = {'external file(*.log)', 'ASCII file headers', 'none'};
str12 = 'No trace file';

% dimensions
fig0 = h.figure_MASH;
pan = h.optExpTr.uipanel_traces;

wrb0 = getUItextWidth(maxlengthstr({str0,str12}),q.fntun,q.fntsz1,'normal',q.tbl)+q.wbox;
wcb0 = getUItextWidth(maxlengthstr({str5,str6,str7,str8,str9}),q.fntun,...
    q.fntsz1,'normal',q.tbl)+q.wbox;
wtxt0 = getUItextWidth(str1,q.fntun,q.fntsz1,'normal',q.tbl);
wpop0 = getUItextWidth(maxlengthstr(str2),q.fntun,q.fntsz1,'normal',q.tbl)+q.warr;
wtxt1 = getUItextWidth(maxlengthstr(str3),q.fntun,q.fntsz1,'normal',q.tbl);
wtxt2 = getUItextWidth(str4,q.fntun,q.fntsz1,'normal',q.tbl);
wtxt3 = getUItextWidth(str10,q.fntun,q.fntsz1,'normal',q.tbl);
wpop1 = getUItextWidth(maxlengthstr(str11),q.fntun,q.fntsz1,'normal',q.tbl)+q.warr;
wpan = 2*q.mg+max([wrb0,wtxt0+wpop0,wtxt1,wcb0+q.mg]);
hpan = q.mg+q.mg/2+q.htxt0+q.mg+q.htxt0+4*(q.mg/2+q.hedit0)+...
    5*(q.mg+q.hedit0)+q.mg;

% scale panel
pan.Position([3,4]) = [wpan,hpan];

x = q.mg;
y = hpan-2*q.mg-q.hedit0;

h.optExpTr.radiobutton_saveTr = uicontrol('style', 'radiobutton', 'Parent', ...
    pan, 'Units', q.posun, 'FontUnits', q.fntun, 'FontSize', q.fntsz1, ...
    'String', str0,'position', [x y wrb0 q.hedit0],'Callback',...
    {@radiobutton_saveTr_Callback, fig0});

y = y-q.mg-q.hedit0;

h.optExpTr.text_trFmt = uicontrol('Style', 'text', 'Parent', pan, 'Units',...
    q.posun, 'FontUnits', q.fntun, 'FontSize', q.fntsz1, 'String', str1, ...
    'Position', [x y wtxt0 q.htxt0], 'HorizontalAlignment', 'left');

x = x+wtxt0;

h.optExpTr.popupmenu_trFmt = uicontrol('Style', 'popupmenu', 'Parent', pan, ...
    'Units', q.posun, 'FontUnits', q.fntun, 'FontSize', q.fntsz1, 'String',...
    str2, 'Position', [x y wpop0 q.hedit0], 'Callback', ...
    {@popupmenu_trFmt_Callback,fig0});

x = q.mg;
y = y-q.mg/2-q.htxt0;

h.optExpTr.text_trInfos = uicontrol('Style', 'text', 'Parent', pan, 'Units',...
    q.posun, 'FontUnits', q.fntun, 'FontSize', q.fntsz1, 'UserData', str3, ...
    'Position', [x y wtxt1 q.htxt0], 'ForegroundColor', [0 0 1], ...
    'HorizontalAlignment', 'left');

x = q.mg;
y = y - q.mg - q.htxt0;

h.optExpTr.text_tr2exp = uicontrol('Style', 'text', 'Parent', pan, 'Units',...
    q.posun, 'FontUnits', q.fntun, 'FontSize', q.fntsz1, 'String', str4, ...
    'Position', [x y wtxt2 q.htxt0], 'HorizontalAlignment', 'left');

x = 2*q.mg;
y = y - q.mg - q.hedit0;

h.optExpTr.checkbox_trI = uicontrol('Style', 'checkbox', 'Parent', pan, ...
    'Units', q.posun, 'FontUnits', q.fntun, 'FontSize', q.fntsz1, 'String', ...
    str5, 'Callback', {@checkbox_trI_Callback, fig0}, 'Position', ...
    [x y wcb0 q.hedit0]);

y = y - q.mg/2 - q.hedit0;

h.optExpTr.checkbox_trFRET = uicontrol('Style', 'checkbox', 'Parent', pan, ...
    'Units', q.posun, 'FontUnits', q.fntun, 'FontSize', q.fntsz1, 'String', ...
    str6, 'Position', [x y wcb0 q.hedit0], 'Callback', ...
    {@checkbox_trFRET_Callback, fig0});

y = y - q.mg/2 - q.hedit0;

h.optExpTr.checkbox_trS = uicontrol('Style', 'checkbox', 'Parent', pan, ...
    'Units', q.posun, 'FontUnits', q.fntun, 'FontSize', q.fntsz1, 'String', ...
    str7, 'Callback', {@checkbox_trS_Callback, fig0}, 'Position', ...
    [x y wcb0 q.hedit0]);

y = y - q.mg/2 - q.hedit0;

h.optExpTr.checkbox_trAll = uicontrol('Style', 'checkbox', 'Parent', pan, ...
    'Units', q.posun, 'FontUnits', q.fntun, 'FontSize', q.fntsz1, 'String', ...
    str8, 'Callback', {@checkbox_trAll_Callback, fig0}, 'Position', ...
    [x y wcb0 q.hedit0]);

% added by FS, 19.3.2018
y = y - q.mg/2 - q.hedit0;

h.optExpTr.checkbox_gam = uicontrol('Style', 'checkbox', 'Parent', pan, ...
    'Units', q.posun, 'FontUnits', q.fntun, 'FontSize', q.fntsz1, 'String', ...
    str9, 'Callback', {@checkbox_gam_Callback, fig0}, 'Position', ...
    [x y wcb0 q.hedit0]);


x = q.mg;
y = y - q.mg - q.hedit0;

h.optExpTr.text_trPrm = uicontrol('Style', 'text', 'Parent', pan, 'Units',...
    q.posun, 'FontUnits', q.fntun, 'FontSize', q.fntsz1, 'String', str10, ...
    'Position', [x y wtxt3 q.htxt0], 'HorizontalAlignment', 'left');

x = x + wtxt3;

h.optExpTr.popupmenu_trPrm = uicontrol('Style', 'popupmenu', 'Parent', pan, ...
    'Units', q.posun, 'FontUnits', q.fntun, 'FontSize', q.fntsz1, 'String', ...
    str11, 'Position', [x y wpop1 q.hedit0], 'Callback', ...
    {@popupmenu_trPrm_Callback, fig0});

x = q.mg;
y = y - q.mg - q.hedit0;

h.optExpTr.radiobutton_noTr = uicontrol('Style', 'radiobutton', 'Parent', ...
    pan, 'Units', q.posun, 'FontUnits', q.fntun, 'FontSize', q.fntsz1, ...
    'String', str12, 'Position', [x y wrb0 q.hedit0], 'Callback', ...
    {@radiobutton_noTr_Callback, fig0});
